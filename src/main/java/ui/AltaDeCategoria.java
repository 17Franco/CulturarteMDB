package ui;
import jakarta.persistence.EntityManager;

import java.util.Map;
import java.util.List;
import javax.swing.JOptionPane;
import logica.Fabrica;
import logica.IController;
import logica.DTO.DTOCategoria;

import javax.swing.*;
import javax.swing.tree.*;


public class AltaDeCategoria extends javax.swing.JInternalFrame {

    private IController controller = Fabrica.getInstance().getController();
    private EntityManager dbManager;
    
    /**
     * Creates new form Alta_Categoria
     */
    public AltaDeCategoria() 
    {
        initComponents();
        catPadreInput.setVisible(false);                //Para evitar problemas si user anda perdido
        refrescarJtree();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void refrescarJtree()
    {
        arbol = cargarJtree(controller.getCategorias());
        panelDelArbol.setViewportView(arbol);
        panelDelArbol.revalidate();
        panelDelArbol.repaint();
    }
    
    
    private DefaultMutableTreeNode Cat_a_Jt(DTOCategoria cat)   //Con esto hago un nodo del arbol compatible con la Jtree
    {
        DefaultMutableTreeNode temp = new DefaultMutableTreeNode(cat);  
    
        for(DTOCategoria ct : cat.getSubcategorias())  //Se recorre cadasubcat de la raíz envidada
        {
            temp.add(Cat_a_Jt(ct));   //Paso recursivo...
        }
        
        return temp;
    }
    
    public JTree cargarJtree(List<DTOCategoria> input_AlmacenCategorias) 
    {
        
        DefaultMutableTreeNode almacen = new DefaultMutableTreeNode("Categorías");
        
        for (DTOCategoria ct : input_AlmacenCategorias) 
        {
                almacen.add(Cat_a_Jt(ct));        //Se pasa a Jtree.
        }
        
        JTree temp = new JTree(almacen);    //JTree final creado
        
        return temp;

    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        subTitulo = new javax.swing.JLabel();
        labelAgregarCategoria = new javax.swing.JLabel();
        newCat = new javax.swing.JTextField();
        botonAgregarCategoria = new javax.swing.JButton();
        catPadreInput = new javax.swing.JTextField();
        esSubCategoriaCheck = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        panelDelArbol = new javax.swing.JScrollPane();
        arbol = new javax.swing.JTree();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Agregar Nueva Categoría...");
        setToolTipText("Añadir");
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });

        subTitulo.setText("Categorías disponibles actualmente");

        labelAgregarCategoria.setText("Añadir categoría nueva");

        newCat.setText("Ingrese nombre categoría...");
        newCat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newCatFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                newCatFocusLost(evt);
            }
        });
        newCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCatActionPerformed(evt);
            }
        });

        botonAgregarCategoria.setText("Agregar...");
        botonAgregarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarCategoriaActionPerformed(evt);
            }
        });

        catPadreInput.setText("Es subcategoría de...");
        catPadreInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                catPadreInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                catPadreInputFocusLost(evt);
            }
        });
        catPadreInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catPadreInputActionPerformed(evt);
            }
        });

        esSubCategoriaCheck.setText("Es Subcategoría");
        esSubCategoriaCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esSubCategoriaCheckActionPerformed(evt);
            }
        });

        panelDelArbol.setViewportView(arbol);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(catPadreInput, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(195, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(newCat, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(esSubCategoriaCheck))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelAgregarCategoria)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(botonAgregarCategoria)))
                        .addGap(24, 24, 24))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(subTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelDelArbol, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(16, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(subTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(panelDelArbol, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelAgregarCategoria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(esSubCategoriaCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(catPadreInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonAgregarCategoria))
                .addGap(27, 27, 27))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(53, 53, 53)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(461, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newCatFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newCatFocusGained
        //Con esto, si se hace clic se quita la label...
        if (newCat.getText().equals("Ingrese nombre categoría...")) 
        {
            newCat.setText("");    
        }
    }//GEN-LAST:event_newCatFocusGained

    private void newCatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newCatFocusLost
        //Se recupera el texto si no se escribe nada y quitan el foco ahi...
        if (newCat.getText().isEmpty()) 
        {
             newCat.setText("Ingrese nombre categoría...");
        }
    }//GEN-LAST:event_newCatFocusLost

    private void newCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newCatActionPerformed

    private void botonAgregarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarCategoriaActionPerformed
    
        if(newCat.getText().equals("Ingrese nombre categoría..."))    //Si no puso nada...
        {
            JOptionPane.showMessageDialog(this, "Ingrese un nombre de categoría!");
        }
        
        if(!newCat.getText().equals("Ingrese nombre categoría..."))
        {  
            if(!catPadreInput.getText().equals("Es subcategoría de..."))    //Si es categoría padre
            {
                DTOCategoria temp = new DTOCategoria(newCat.getText(),null,catPadreInput.getText()); 

                if(controller.altaDeCategoria(temp))        //Ingreso de nueva categoría o subcategoria.
                {
                    JOptionPane.showMessageDialog(this, "Categoría ingresada correctamente!");
                } 
                else 
                {
                    JOptionPane.showMessageDialog(this, "Error! la categoría no pudo ser ingresada o ya existe...");
                }
            }
            
            if(catPadreInput.getText().equals("Es subcategoría de...")) //Si es subcategoria
            {
                DTOCategoria temp = new DTOCategoria(newCat.getText(),null,""); 

                if(controller.altaDeCategoria(temp))        //Ingreso de nueva categoría o subcategoria.
                {
                    JOptionPane.showMessageDialog(this, "Categoría ingresada correctamente!");
                } 
                else 
                {
                    JOptionPane.showMessageDialog(this, "Error! la categoría no pudo ser ingresada o ya existe...");
                }
            }
            
            
         }   
        refrescarJtree();   //Actualizar estados, no se mantiene como estaba luego de desplegarse pero no se me ocurre manera de hacer eso...
    }//GEN-LAST:event_botonAgregarCategoriaActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        //TODO
    }//GEN-LAST:event_formFocusGained

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost

        //TODO
    }//GEN-LAST:event_formFocusLost

    private void esSubCategoriaCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esSubCategoriaCheckActionPerformed
        
        if(esSubCategoriaCheck.isSelected())
        {
            catPadreInput.setVisible(true); //Si está presionado aparece el recuadro
        }
        if(!esSubCategoriaCheck.isSelected())
        {
            catPadreInput.setVisible(false); //Si lo des-selecciona.
            catPadreInput.setText("Es subcategoría de...");  //Reinicia.
        }
        
        catPadreInput.getParent().revalidate();
    }//GEN-LAST:event_esSubCategoriaCheckActionPerformed

    private void catPadreInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catPadreInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_catPadreInputActionPerformed

    private void catPadreInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_catPadreInputFocusGained
        
        if (catPadreInput.getText().equals("Es subcategoría de...")) 
        {
             catPadreInput.setText("");
        }
    }//GEN-LAST:event_catPadreInputFocusGained

    private void catPadreInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_catPadreInputFocusLost
        
        if (catPadreInput.getText().isEmpty()) 
        {
             catPadreInput.setText("Es subcategoría de...");
        }
    }//GEN-LAST:event_catPadreInputFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree arbol;
    private javax.swing.JButton botonAgregarCategoria;
    private javax.swing.JTextField catPadreInput;
    private javax.swing.JCheckBox esSubCategoriaCheck;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel labelAgregarCategoria;
    private javax.swing.JTextField newCat;
    private javax.swing.JScrollPane panelDelArbol;
    private javax.swing.JLabel subTitulo;
    // End of variables declaration//GEN-END:variables
}
